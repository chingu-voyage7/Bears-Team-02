# import * from './generated/prisma.graphql'

type Query {
  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, first: Int): [Post]!
}

type Mutation {
  signup(name: String!, email: String!, password: String): User
  signin(email: String!, password: String!): User
  signout: Payload
  createPost(data: PostCreateInput!): Post
}

type User {
  id: ID!
  name: String!
  email: String!
  image: String
  password: String
  oauthId: String
  role: Role!
  posts: [Post]
  reviews: [Review]
  createdAt: DateTime!
}

type Post {
  id: ID!
  language: Language!
  tags: [String!]!
  contentType: ContentType!
  difficulty: Difficulty!
  title: String!
  description: String!
  author: String
  href: String!
  image: String
  price: PriceRange!
  reviews: [Review]!
  user: User!
  createdAt: DateTime!
}

type Review {
  id: ID!
  rating: Int!
  text: String
  user: User!
  post: Post!
  createdAt: DateTime!
}

type Payload {
  message: String!
}

# various programming languages
enum Language {
  JAVASCRIPT
  PYTHON
  CSHARP
  CSS
  CLI
  LINUX
  AWS
  GIT
  JAVA
  MARKDOWN
}

# general categories of content
enum ContentType {
  DOCUMENTATION
  TUTORIAL
  BOOK
  ARTICLE
}

# difficulty level of content
enum Difficulty {
  EASY
  MID
  HARD
  EXPERT
}

# price range
enum PriceRange {
  FREE
  LOW
  MID
  HIGH
}

enum Role {
  USER
  ADMIN
}
